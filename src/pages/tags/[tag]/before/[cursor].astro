---
import List from '../../../../components/list.astro'
import { normalizeCursorParam } from '../../../../lib/cursor'
import { getChannelInfo } from '../../../../lib/telegram'
import { normalizeTag } from '../../../../lib/tags'

const rawTagParam = typeof Astro.params.tag === 'string' ? Astro.params.tag : ''
const normalizedTag = normalizeTag(rawTagParam)
const cursor = normalizeCursorParam(Astro.params.cursor)

if (!normalizedTag) {
  return Astro.redirect('/tags/')
}

if (!cursor) {
  return Astro.redirect(`/tags/${encodeURIComponent(normalizedTag)}/`)
}

// Fetch the "older" slice for this tag
const channel = await getChannelInfo(Astro, { tag: normalizedTag, before: cursor })

// Guard: never show an empty page
if (!Array.isArray(channel?.posts) || channel.posts.length === 0) {
  return Astro.redirect(`/tags/${encodeURIComponent(normalizedTag)}/`)
}

channel.seo = { noindex: true }

const paginationBasePath = `tags/${encodeURIComponent(normalizedTag)}/`
---

<List channel={channel} before after paginationGap paginationBasePath={paginationBasePath} />
