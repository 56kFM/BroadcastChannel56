---
import List from '../components/list.astro'
import { getChannelInfo } from '../lib/telegram'

/* HOME_FETCH_START */
const channel = await getChannelInfo(Astro, { limit: 1 })
/* HOME_FETCH_END */
const post = channel?.posts?.[0]
const KIND_HOSTS: Record<string, string[]> = {
  youtube: ['www.youtube-nocookie.com', 'www.youtube.com', 'youtu.be'],
  vimeo: ['player.vimeo.com'],
  soundcloud: ['w.soundcloud.com'],
  spotify: ['open.spotify.com'],
  apple: ['embed.music.apple.com'],
  bandcamp: ['bandcamp.com'],
}
const used = new Set<string>()
if (post?.embeds) {
  for (const e of post.embeds) {
    const hs = KIND_HOSTS[e?.kind as string]
    if (hs) hs.forEach((h) => used.add(h))
    else if (e?.url) {
      try {
        used.add(new URL(e.url).hostname)
      } catch {}
    }
  }
}
const preconnectHosts = Array.from(used)
---

<Fragment slot="head">
  {
    preconnectHosts.map((h) => (
      <>
        <link rel="preconnect" href={'https://' + h} crossorigin />
        <link rel="dns-prefetch" href={'//' + h} />
      </>
    ))
  }
</Fragment>

<List channel={channel} isItem={true} paginationGap={true} />
