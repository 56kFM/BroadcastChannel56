---
import { getEnv } from '../../lib/env'
import voidFile from '../../assets/void.png'
import List from '../../components/list.astro'
import { getChannelInfo } from '../../lib/telegram'
import bandcamp from '../../assets/bandcamp.svg'
import soundcloud from '../../assets/soundcloud.svg'
import applemusic from '../../assets/applemusic.svg'
import spotify from '../../assets/spotify.svg'
import telegram from '../../assets/telegram.svg'

const { SITE_URL } = Astro.locals

const channelInfo = await getChannelInfo(Astro)

const post = await getChannelInfo(Astro, {
  type: 'post',
  id: Astro.params.id,
})

const channel = {
  ...(channelInfo || {}),
  posts: [post],
  seo: post,
}

const staticProxy = getEnv(import.meta.env, Astro, 'STATIC_PROXY') ?? '/static/'
const SOUNDCLOUD = getEnv(import.meta.env, Astro, 'SOUNDCLOUD')
const BANDCAMP = getEnv(import.meta.env, Astro, 'BANDCAMP')
const SPOTIFY = getEnv(import.meta.env, Astro, 'SPOTIFY')
const APPLEMUSIC = getEnv(import.meta.env, Astro, 'APPLEMUSIC')
const TELEGRAM = getEnv(import.meta.env, Astro, 'TELEGRAM')

const socialLinks = [
  {
    href: BANDCAMP,
    icon: bandcamp,
    alt: 'Bandcamp',
  },
  {
    href: SOUNDCLOUD,
    icon: soundcloud,
    alt: 'SoundCloud',
  },
  {
    href: APPLEMUSIC,
    icon: applemusic,
    alt: 'Apple Music',
  },
  {
    href: SPOTIFY,
    icon: spotify,
    alt: 'Spotify',
  },
  {
    href: TELEGRAM ? `https://t.me/${TELEGRAM}` : undefined,
    icon: telegram,
    alt: 'Telegram',
  },
]

const hasSocialLinks = socialLinks.some((link) => typeof link.href === 'string' && link.href.length > 0)
---

<List channel={channel} before={false} after={false} isItem={true}>
  <div slot="header" class="header-wrapper">
    <div id="breadcrumb-section">
      <div id="breadcrumb">
        <img
          src={channel?.avatar?.startsWith('http') ? staticProxy + channel?.avatar : voidFile.src}
          alt={channel?.title}
          loading="eager"
          class="breadcrumb-avatar"
        />
        <div class="breadcrumb-title">
          <a
            href={SITE_URL}
            class="site-title"
            title={channel?.title}
            onclick={`event.preventDefault(); if (history.length > 1) { history.back(); } else { window.location.assign('${SITE_URL}'); }`}
          >
            {channel.title}
          </a>
        </div>
      </div>
    </div>

    {
      ((channel?.descriptionHTML && channel?.descriptionHTML.length > 0) || hasSocialLinks) && (
        <footer id="site-footer">
          {channel?.descriptionHTML && channel?.descriptionHTML.length > 0 && (
            <div class="text-box" id="site-intro" set:html={channel?.descriptionHTML} />
          )}
          {hasSocialLinks && (
            <div class="footer-icons">
              {socialLinks.map((link) =>
                link.href ? (
                  <a href={link.href} title={link.alt} target="_blank" rel="noopener noreferrer">
                    <img
                      {...link.icon}
                      alt={link.alt}
                      class="social-icon"
                      width="3em"
                      loading="lazy"
                      decoding="async"
                    />
                  </a>
                ) : null,
              )}
            </div>
          )}
        </footer>
      )
    }
  </div>
</List>

<style>
  :global(#wrapper) {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    gap: 48px;
  }

  :global(#header-container) {
    display: contents;
  }

  .header-wrapper {
    display: contents;
  }

  #breadcrumb-section {
    order: 0;
  }

  :global(#main-container) {
    order: 1;
    flex: 1;
  }

  #site-footer {
    order: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px;
  }

  .footer-icons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-xs);
  }

  #site-intro {
    color: var(--secondary-color);
    background: none;
    border: none;
    box-shadow: none;
    padding: 0;
    word-break: break-word;

    & :global(.emoji) {
      font-style: normal;
      margin-right: 2px;
    }
  }
</style>
