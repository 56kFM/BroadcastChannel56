---
import { getEnv } from '../../lib/env'
import List from '../../components/list.astro'
import { getChannelInfo } from '../../lib/telegram'
import { normalizeStaticProxy, toProxyUrl } from '../../lib/static-proxy'
import voidFile from '../../assets/void.png'

const { BASE_URL } = Astro.locals

const channelInfo = await getChannelInfo(Astro)

const post = await getChannelInfo(Astro, {
  type: 'post',
  id: Astro.params.id,
})

const channel = {
  ...(channelInfo || {}),
  posts: [post],
  seo: post,
}

const staticProxy = normalizeStaticProxy(getEnv(import.meta.env, Astro, 'STATIC_PROXY'))
const avatarSrc = toProxyUrl(staticProxy, channel?.avatar) || voidFile.src
---

<List channel={channel} before={false} after={false} isItem={true} paginationGap={true}>
  <div slot="header" class="header-wrapper">
    <div id="breadcrumb-section">
      <div id="breadcrumb">
        <img src={avatarSrc} alt={channel?.title} loading="eager" class="breadcrumb-avatar" />
        <div class="breadcrumb-title">
          <a
            href={BASE_URL}
            class="site-title"
            title={channel?.title}
            onclick={`event.preventDefault(); if (history.length > 1) { history.back(); } else { window.location.assign('${BASE_URL}'); }`}
          >
            {channel.title}
          </a>
        </div>
      </div>
    </div>
  </div>
</List>
