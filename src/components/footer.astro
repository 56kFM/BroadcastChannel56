---
import { getSocialLinks } from '../lib/social-links'
import { sanitizeHTML } from '../utils/sanitizeHTML'

const { channel } = Astro.props
const BASE = Astro.locals.SITE_URL || Astro.locals.SITE_ORIGIN

const socialLinks = getSocialLinks(import.meta.env, Astro)
const hasSocialLinks = socialLinks.length > 0
const hasDescription = typeof channel?.descriptionHTML === 'string' && channel.descriptionHTML.length > 0
const safeDescription = hasDescription ? sanitizeHTML(channel?.descriptionHTML ?? '', { baseUrl: BASE }) : ''
const shouldRenderFooter = hasDescription || hasSocialLinks
---

{
  shouldRenderFooter && (
    <footer class="site-footer">
      {hasDescription && <div class="text-box site-intro site-intro--plain" set:html={safeDescription} />}
      {hasSocialLinks && (
        <div class="footer-icons">
          {socialLinks.map((link) => (
            <a
              href={link.href}
              title={link.alt}
              aria-label={link.alt}
              target="_blank"
              rel="noopener noreferrer nofollow ugc"
              class="footer-icons__link"
            >
              <span class="social-icon" aria-hidden="true" set:html={link.icon} />
            </a>
          ))}
        </div>
      )}
    </footer>
  )
}
