---
import Layout from '../layouts/base.astro'
import Header from '../components/header.astro'
import Item from '../components/item.astro'

const { BASE_URL } = Astro.locals
const {
  channel,
  before = true,
  after = true,
  isItem = false,
  paginationGap = false,
  paginationBasePath = '',
} = Astro.props

const posts = Array.isArray(channel?.posts) ? channel.posts : []
const beforeCursor = posts.at(-1)?.id
const afterCursor = posts[0]?.id

const normalizedBasePath = paginationBasePath ? `${paginationBasePath.replace(/^\/+/u, '').replace(/\/+$/u, '')}/` : ''
const encodeCursor = (cursor: unknown) => encodeURIComponent(String(cursor))
const beforeHref =
  typeof beforeCursor === 'undefined' ? '' : `${BASE_URL}${normalizedBasePath}before/${encodeCursor(beforeCursor)}`
const afterHref =
  typeof afterCursor === 'undefined' ? '' : `${BASE_URL}${normalizedBasePath}after/${encodeCursor(afterCursor)}`
const hasOlderPosts = before && typeof beforeCursor !== 'undefined' && Number.parseInt(beforeCursor, 10) > 1
const hasNewerPosts = after && typeof afterCursor !== 'undefined'
/**
 * NOTE: Feed page size is controlled by the repo’s custom paginator.
 * The custom paginator is the source of truth for per-page limits.
 * Do not add separate per-page limits (env/const) here to avoid duplication.
 */
const paginationClassList = {
  'pages-container': true,
  'pages-container--with-gap': paginationGap,
}
---

<Layout channel={channel} id="main-container">
  <slot name="header">
    <Header channel={channel} />
  </slot>
  <div class="items">
    {posts.map((_post, _index) => <Item post={_post} isItem={isItem} />)}
  </div>

  <div class:list={paginationClassList}>
    {
      hasOlderPosts ? (
        <a href={beforeHref} title="before" class="page">
          ◀◀
        </a>
      ) : (
        <span class="page-placeholder">&nbsp;</span>
      )
    }

    <div class="pages-info"></div>
    {
      hasNewerPosts ? (
        <a href={afterHref} title="after" class="page">
          ▶▶
        </a>
      ) : (
        <span class="page-placeholder">&nbsp;</span>
      )
    }
  </div>
</Layout>
