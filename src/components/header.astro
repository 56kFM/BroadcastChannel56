---
import { getEnv } from '../lib/env'
import voidFile from '../assets/void.png'
import bandcamp from '../assets/bandcamp.svg'
import soundcloud from '../assets/soundcloud.svg'
import applemusic from '../assets/applemusic.svg'
import spotify from '../assets/spotify.svg'
import telegram from '../assets/telegram.svg'

const { SITE_URL } = Astro.locals
const { channel } = Astro.props

const BANDCAMP = getEnv(import.meta.env, Astro, 'BANDCAMP')
const SOUNDCLOUD = getEnv(import.meta.env, Astro, 'SOUNDCLOUD')
const APPLEMUSIC = getEnv(import.meta.env, Astro, 'APPLEMUSIC')
const SPOTIFY = getEnv(import.meta.env, Astro, 'SPOTIFY')
const TELEGRAM = getEnv(import.meta.env, Astro, 'TELEGRAM')

const staticProxy = getEnv(import.meta.env, Astro, 'STATIC_PROXY') ?? '/static/'

const socialLinks = [
  {
    href: BANDCAMP,
    icon: bandcamp,
    alt: 'Bandcamp',
  },
  {
    href: SOUNDCLOUD,
    icon: soundcloud,
    alt: 'SoundCloud',
  },
  {
    href: APPLEMUSIC,
    icon: applemusic,
    alt: 'Apple Music',
  },
  {
    href: SPOTIFY,
    icon: spotify,
    alt: 'Spotify',
  },
  {
    href: TELEGRAM ? `https://t.me/${TELEGRAM}` : undefined,
    icon: telegram,
    alt: 'Telegram',
  },
]

const hasSocialLinks = socialLinks.some((link) => typeof link.href === 'string' && link.href.length > 0)
---

<div id="header-section">
  <div id="header">
    <a href={SITE_URL} title={channel?.title}>
      <img
        src={channel?.avatar?.startsWith('http') ? staticProxy + channel?.avatar : voidFile.src}
        alt={channel?.title}
        loading="eager"
        class="header-avatar"
      />
    </a>
    <div class="header-title">
      <a href={SITE_URL} class="site-title" title={channel?.title}>
        {channel?.title}
      </a>
    </div>
  </div>
</div>

{
  ((channel?.descriptionHTML && channel?.descriptionHTML.length > 0) || hasSocialLinks) && (
    <footer id="site-footer">
      {channel?.descriptionHTML && channel?.descriptionHTML.length > 0 && (
        <div class="text-box" id="site-intro" set:html={channel?.descriptionHTML} />
      )}
      {hasSocialLinks && (
        <div class="footer-icons">
          {socialLinks.map((link) =>
            link.href ? (
              <a href={link.href} title={link.alt} target="_blank" rel="noopener noreferrer">
                <img {...link.icon} alt={link.alt} class="social-icon" width="3em" />
              </a>
            ) : null,
          )}
        </div>
      )}
    </footer>
  )
}

<style>
  :global(#wrapper) {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    gap: 48px;
  }

  :global(#header-container) {
    display: contents;
  }

  #header-section {
    order: 0;
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  :global(#main-container) {
    order: 1;
    flex: 1;
  }

  #site-footer {
    order: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px;
  }

  .footer-icons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-xs);
  }

  #site-intro {
    color: var(--secondary-color);
    background: none;
    border: none;
    box-shadow: none;
    padding: 0;
    word-break: break-word;

    & :global(.emoji) {
      font-style: normal;
      margin-right: 2px;
    }
  }
</style>
